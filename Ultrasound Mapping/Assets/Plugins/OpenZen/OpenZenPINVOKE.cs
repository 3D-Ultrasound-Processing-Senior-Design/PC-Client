//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


class OpenZenPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="SWIGRegisterExceptionCallbacks_OpenZen")]
    public static extern void SWIGRegisterExceptionCallbacks_OpenZen(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_OpenZen")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_OpenZen(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_OpenZen(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_OpenZen(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;
    private static global::System.Object exceptionsLock = null;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(exceptionsLock) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(exceptionsLock) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }

    static SWIGPendingException() {
      exceptionsLock = new global::System.Object();
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="SWIGRegisterStringCallback_OpenZen")]
    public static extern void SWIGRegisterStringCallback_OpenZen(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_OpenZen(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static OpenZenPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_new_OpenZenFloatArray")]
  public static extern global::System.IntPtr new_OpenZenFloatArray(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_delete_OpenZenFloatArray")]
  public static extern void delete_OpenZenFloatArray(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_OpenZenFloatArray_getitem")]
  public static extern float OpenZenFloatArray_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_OpenZenFloatArray_setitem")]
  public static extern void OpenZenFloatArray_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_OpenZenFloatArray_cast")]
  public static extern global::System.IntPtr OpenZenFloatArray_cast(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_OpenZenFloatArray_frompointer")]
  public static extern global::System.IntPtr OpenZenFloatArray_frompointer(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenClientHandle_t_handle_set")]
  public static extern void ZenClientHandle_t_handle_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenClientHandle_t_handle_get")]
  public static extern uint ZenClientHandle_t_handle_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_new_ZenClientHandle_t")]
  public static extern global::System.IntPtr new_ZenClientHandle_t();

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_delete_ZenClientHandle_t")]
  public static extern void delete_ZenClientHandle_t(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorHandle_t_handle_set")]
  public static extern void ZenSensorHandle_t_handle_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorHandle_t_handle_get")]
  public static extern uint ZenSensorHandle_t_handle_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_new_ZenSensorHandle_t")]
  public static extern global::System.IntPtr new_ZenSensorHandle_t();

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_delete_ZenSensorHandle_t")]
  public static extern void delete_ZenSensorHandle_t(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenComponentHandle_t_handle_set")]
  public static extern void ZenComponentHandle_t_handle_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenComponentHandle_t_handle_get")]
  public static extern uint ZenComponentHandle_t_handle_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_new_ZenComponentHandle_t")]
  public static extern global::System.IntPtr new_ZenComponentHandle_t();

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_delete_ZenComponentHandle_t")]
  public static extern void delete_ZenComponentHandle_t(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_frameCount_set")]
  public static extern void ZenImuData_frameCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_frameCount_get")]
  public static extern int ZenImuData_frameCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_timestamp_set")]
  public static extern void ZenImuData_timestamp_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_timestamp_get")]
  public static extern double ZenImuData_timestamp_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_a_set")]
  public static extern void ZenImuData_a_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_a_get")]
  public static extern global::System.IntPtr ZenImuData_a_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_g1_set")]
  public static extern void ZenImuData_g1_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_g1_get")]
  public static extern global::System.IntPtr ZenImuData_g1_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_g2_set")]
  public static extern void ZenImuData_g2_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_g2_get")]
  public static extern global::System.IntPtr ZenImuData_g2_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_g1BiasCalib_set")]
  public static extern void ZenImuData_g1BiasCalib_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_g1BiasCalib_get")]
  public static extern global::System.IntPtr ZenImuData_g1BiasCalib_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_g2BiasCalib_set")]
  public static extern void ZenImuData_g2BiasCalib_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_g2BiasCalib_get")]
  public static extern global::System.IntPtr ZenImuData_g2BiasCalib_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_b_set")]
  public static extern void ZenImuData_b_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_b_get")]
  public static extern global::System.IntPtr ZenImuData_b_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_aRaw_set")]
  public static extern void ZenImuData_aRaw_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_aRaw_get")]
  public static extern global::System.IntPtr ZenImuData_aRaw_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_g1Raw_set")]
  public static extern void ZenImuData_g1Raw_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_g1Raw_get")]
  public static extern global::System.IntPtr ZenImuData_g1Raw_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_g2Raw_set")]
  public static extern void ZenImuData_g2Raw_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_g2Raw_get")]
  public static extern global::System.IntPtr ZenImuData_g2Raw_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_bRaw_set")]
  public static extern void ZenImuData_bRaw_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_bRaw_get")]
  public static extern global::System.IntPtr ZenImuData_bRaw_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_w_set")]
  public static extern void ZenImuData_w_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_w_get")]
  public static extern global::System.IntPtr ZenImuData_w_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_r_set")]
  public static extern void ZenImuData_r_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_r_get")]
  public static extern global::System.IntPtr ZenImuData_r_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_q_set")]
  public static extern void ZenImuData_q_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_q_get")]
  public static extern global::System.IntPtr ZenImuData_q_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_rotationM_set")]
  public static extern void ZenImuData_rotationM_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_rotationM_get")]
  public static extern global::System.IntPtr ZenImuData_rotationM_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_rotOffsetM_set")]
  public static extern void ZenImuData_rotOffsetM_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_rotOffsetM_get")]
  public static extern global::System.IntPtr ZenImuData_rotOffsetM_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_pressure_set")]
  public static extern void ZenImuData_pressure_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_pressure_get")]
  public static extern float ZenImuData_pressure_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_linAcc_set")]
  public static extern void ZenImuData_linAcc_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_linAcc_get")]
  public static extern global::System.IntPtr ZenImuData_linAcc_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_gTemp_set")]
  public static extern void ZenImuData_gTemp_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_gTemp_get")]
  public static extern float ZenImuData_gTemp_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_altitude_set")]
  public static extern void ZenImuData_altitude_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_altitude_get")]
  public static extern float ZenImuData_altitude_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_temperature_set")]
  public static extern void ZenImuData_temperature_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_temperature_get")]
  public static extern float ZenImuData_temperature_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_heaveMotion_set")]
  public static extern void ZenImuData_heaveMotion_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenImuData_heaveMotion_get")]
  public static extern float ZenImuData_heaveMotion_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_new_ZenImuData")]
  public static extern global::System.IntPtr new_ZenImuData();

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_delete_ZenImuData")]
  public static extern void delete_ZenImuData(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_frameCount_set")]
  public static extern void ZenGnssData_frameCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_frameCount_get")]
  public static extern int ZenGnssData_frameCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_timestamp_set")]
  public static extern void ZenGnssData_timestamp_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_timestamp_get")]
  public static extern double ZenGnssData_timestamp_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_latitude_set")]
  public static extern void ZenGnssData_latitude_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_latitude_get")]
  public static extern double ZenGnssData_latitude_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_horizontalAccuracy_set")]
  public static extern void ZenGnssData_horizontalAccuracy_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_horizontalAccuracy_get")]
  public static extern double ZenGnssData_horizontalAccuracy_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_longitude_set")]
  public static extern void ZenGnssData_longitude_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_longitude_get")]
  public static extern double ZenGnssData_longitude_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_verticalAccuracy_set")]
  public static extern void ZenGnssData_verticalAccuracy_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_verticalAccuracy_get")]
  public static extern double ZenGnssData_verticalAccuracy_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_height_set")]
  public static extern void ZenGnssData_height_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_height_get")]
  public static extern double ZenGnssData_height_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_headingOfMotion_set")]
  public static extern void ZenGnssData_headingOfMotion_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_headingOfMotion_get")]
  public static extern double ZenGnssData_headingOfMotion_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_headingOfVehicle_set")]
  public static extern void ZenGnssData_headingOfVehicle_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_headingOfVehicle_get")]
  public static extern double ZenGnssData_headingOfVehicle_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_headingAccuracy_set")]
  public static extern void ZenGnssData_headingAccuracy_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_headingAccuracy_get")]
  public static extern double ZenGnssData_headingAccuracy_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_velocity_set")]
  public static extern void ZenGnssData_velocity_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_velocity_get")]
  public static extern double ZenGnssData_velocity_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_velocityAccuracy_set")]
  public static extern void ZenGnssData_velocityAccuracy_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_velocityAccuracy_get")]
  public static extern double ZenGnssData_velocityAccuracy_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_fixType_set")]
  public static extern void ZenGnssData_fixType_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_fixType_get")]
  public static extern int ZenGnssData_fixType_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_carrierPhaseSolution_set")]
  public static extern void ZenGnssData_carrierPhaseSolution_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_carrierPhaseSolution_get")]
  public static extern int ZenGnssData_carrierPhaseSolution_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_numberSatellitesUsed_set")]
  public static extern void ZenGnssData_numberSatellitesUsed_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_numberSatellitesUsed_get")]
  public static extern byte ZenGnssData_numberSatellitesUsed_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_year_set")]
  public static extern void ZenGnssData_year_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_year_get")]
  public static extern ushort ZenGnssData_year_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_month_set")]
  public static extern void ZenGnssData_month_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_month_get")]
  public static extern byte ZenGnssData_month_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_day_set")]
  public static extern void ZenGnssData_day_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_day_get")]
  public static extern byte ZenGnssData_day_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_hour_set")]
  public static extern void ZenGnssData_hour_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_hour_get")]
  public static extern byte ZenGnssData_hour_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_minute_set")]
  public static extern void ZenGnssData_minute_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_minute_get")]
  public static extern byte ZenGnssData_minute_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_second_set")]
  public static extern void ZenGnssData_second_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_second_get")]
  public static extern byte ZenGnssData_second_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_nanoSecondCorrection_set")]
  public static extern void ZenGnssData_nanoSecondCorrection_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenGnssData_nanoSecondCorrection_get")]
  public static extern int ZenGnssData_nanoSecondCorrection_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_new_ZenGnssData")]
  public static extern global::System.IntPtr new_ZenGnssData();

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_delete_ZenGnssData")]
  public static extern void delete_ZenGnssData(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorDesc_name_set")]
  public static extern void ZenSensorDesc_name_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorDesc_name_get")]
  public static extern string ZenSensorDesc_name_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorDesc_serialNumber_set")]
  public static extern void ZenSensorDesc_serialNumber_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorDesc_serialNumber_get")]
  public static extern string ZenSensorDesc_serialNumber_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorDesc_ioType_set")]
  public static extern void ZenSensorDesc_ioType_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorDesc_ioType_get")]
  public static extern string ZenSensorDesc_ioType_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorDesc_identifier_set")]
  public static extern void ZenSensorDesc_identifier_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorDesc_identifier_get")]
  public static extern string ZenSensorDesc_identifier_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorDesc_baudRate_set")]
  public static extern void ZenSensorDesc_baudRate_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorDesc_baudRate_get")]
  public static extern uint ZenSensorDesc_baudRate_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_new_ZenSensorDesc")]
  public static extern global::System.IntPtr new_ZenSensorDesc();

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_delete_ZenSensorDesc")]
  public static extern void delete_ZenSensorDesc(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_SensorDisconnected_error_set")]
  public static extern void ZenEventData_SensorDisconnected_error_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_SensorDisconnected_error_get")]
  public static extern int ZenEventData_SensorDisconnected_error_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_new_ZenEventData_SensorDisconnected")]
  public static extern global::System.IntPtr new_ZenEventData_SensorDisconnected();

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_delete_ZenEventData_SensorDisconnected")]
  public static extern void delete_ZenEventData_SensorDisconnected(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_SensorListingProgress_progress_set")]
  public static extern void ZenEventData_SensorListingProgress_progress_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_SensorListingProgress_progress_get")]
  public static extern float ZenEventData_SensorListingProgress_progress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_SensorListingProgress_complete_set")]
  public static extern void ZenEventData_SensorListingProgress_complete_set(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_SensorListingProgress_complete_get")]
  public static extern char ZenEventData_SensorListingProgress_complete_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_new_ZenEventData_SensorListingProgress")]
  public static extern global::System.IntPtr new_ZenEventData_SensorListingProgress();

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_delete_ZenEventData_SensorListingProgress")]
  public static extern void delete_ZenEventData_SensorListingProgress(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_imuData_set")]
  public static extern void ZenEventData_imuData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_imuData_get")]
  public static extern global::System.IntPtr ZenEventData_imuData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_gnssData_set")]
  public static extern void ZenEventData_gnssData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_gnssData_get")]
  public static extern global::System.IntPtr ZenEventData_gnssData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_sensorDisconnected_set")]
  public static extern void ZenEventData_sensorDisconnected_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_sensorDisconnected_get")]
  public static extern global::System.IntPtr ZenEventData_sensorDisconnected_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_sensorFound_set")]
  public static extern void ZenEventData_sensorFound_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_sensorFound_get")]
  public static extern global::System.IntPtr ZenEventData_sensorFound_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_sensorListingProgress_set")]
  public static extern void ZenEventData_sensorListingProgress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEventData_sensorListingProgress_get")]
  public static extern global::System.IntPtr ZenEventData_sensorListingProgress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_new_ZenEventData")]
  public static extern global::System.IntPtr new_ZenEventData();

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_delete_ZenEventData")]
  public static extern void delete_ZenEventData(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEvent_eventType_set")]
  public static extern void ZenEvent_eventType_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEvent_eventType_get")]
  public static extern int ZenEvent_eventType_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEvent_sensor_set")]
  public static extern void ZenEvent_sensor_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEvent_sensor_get")]
  public static extern global::System.IntPtr ZenEvent_sensor_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEvent_component_set")]
  public static extern void ZenEvent_component_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEvent_component_get")]
  public static extern global::System.IntPtr ZenEvent_component_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEvent_data_set")]
  public static extern void ZenEvent_data_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenEvent_data_get")]
  public static extern global::System.IntPtr ZenEvent_data_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_new_ZenEvent")]
  public static extern global::System.IntPtr new_ZenEvent();

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_delete_ZenEvent")]
  public static extern void delete_ZenEvent(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_g_zenSensorType_Imu_get")]
  public static extern string g_zenSensorType_Imu_get();

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_g_zenSensorType_Gnss_get")]
  public static extern string g_zenSensorType_Gnss_get();

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenInit")]
  public static extern int ZenInit(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenShutdown")]
  public static extern int ZenShutdown(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSetLogLevel")]
  public static extern int ZenSetLogLevel(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenListSensorsAsync")]
  public static extern int ZenListSensorsAsync(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenObtainSensor")]
  public static extern int ZenObtainSensor(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenObtainSensorByName")]
  public static extern int ZenObtainSensorByName(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, uint jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenReleaseSensor")]
  public static extern int ZenReleaseSensor(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenPollNextEvent")]
  public static extern bool ZenPollNextEvent(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenWaitForNextEvent")]
  public static extern bool ZenWaitForNextEvent(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenPublishEvents")]
  public static extern int ZenPublishEvents(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponents")]
  public static extern int ZenSensorComponents(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentsByNumber")]
  public static extern int ZenSensorComponentsByNumber(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorIoType")]
  public static extern string ZenSensorIoType(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorName")]
  public static extern string ZenSensorName(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorEquals")]
  public static extern bool ZenSensorEquals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorUpdateFirmwareAsync")]
  public static extern int ZenSensorUpdateFirmwareAsync(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorUpdateIAPAsync")]
  public static extern int ZenSensorUpdateIAPAsync(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorExecuteProperty")]
  public static extern int ZenSensorExecuteProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorGetArrayProperty")]
  public static extern int ZenSensorGetArrayProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, int jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorGetBoolProperty")]
  public static extern int ZenSensorGetBoolProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorGetFloatProperty")]
  public static extern int ZenSensorGetFloatProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorGetInt32Property")]
  public static extern int ZenSensorGetInt32Property(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorGetUInt64Property")]
  public static extern int ZenSensorGetUInt64Property(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorSetArrayProperty")]
  public static extern int ZenSensorSetArrayProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, int jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, uint jarg6);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorSetBoolProperty")]
  public static extern int ZenSensorSetBoolProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, bool jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorSetFloatProperty")]
  public static extern int ZenSensorSetFloatProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, float jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorSetInt32Property")]
  public static extern int ZenSensorSetInt32Property(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorSetUInt64Property")]
  public static extern int ZenSensorSetUInt64Property(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, uint jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorIsArrayProperty")]
  public static extern bool ZenSensorIsArrayProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorIsConstantProperty")]
  public static extern bool ZenSensorIsConstantProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorIsExecutableProperty")]
  public static extern bool ZenSensorIsExecutableProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorPropertyType")]
  public static extern int ZenSensorPropertyType(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentType")]
  public static extern string ZenSensorComponentType(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentExecuteProperty")]
  public static extern int ZenSensorComponentExecuteProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentGetArrayProperty")]
  public static extern int ZenSensorComponentGetArrayProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentGetBoolProperty")]
  public static extern int ZenSensorComponentGetBoolProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentGetFloatProperty")]
  public static extern int ZenSensorComponentGetFloatProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentGetInt32Property")]
  public static extern int ZenSensorComponentGetInt32Property(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentGetUInt64Property")]
  public static extern int ZenSensorComponentGetUInt64Property(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentSetArrayProperty")]
  public static extern int ZenSensorComponentSetArrayProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, uint jarg7);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentSetBoolProperty")]
  public static extern int ZenSensorComponentSetBoolProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, bool jarg5);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentSetFloatProperty")]
  public static extern int ZenSensorComponentSetFloatProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, float jarg5);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentSetInt32Property")]
  public static extern int ZenSensorComponentSetInt32Property(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, int jarg5);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentSetUInt64Property")]
  public static extern int ZenSensorComponentSetUInt64Property(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, uint jarg5);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentIsArrayProperty")]
  public static extern bool ZenSensorComponentIsArrayProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentIsConstantProperty")]
  public static extern bool ZenSensorComponentIsConstantProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentIsExecutableProperty")]
  public static extern bool ZenSensorComponentIsExecutableProperty(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentPropertyType")]
  public static extern int ZenSensorComponentPropertyType(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("OpenZen", EntryPoint="CSharp_ZenSensorComponentGnnsForwardRtkCorrections")]
  public static extern int ZenSensorComponentGnnsForwardRtkCorrections(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, string jarg4, string jarg5, uint jarg6);
}
